@use "@angular/material" as mat;

@include mat.core();

// Define a light theme using default palettes
$light-primary: mat.define-palette(mat.$indigo-palette);
$light-accent: mat.define-palette(mat.$pink-palette);
$light-warn: mat.define-palette(mat.$pink-palette);
$light-theme: mat.define-light-theme(
  (
    color: (
      primary: $light-primary,
      accent: $light-accent,
      warn: $light-warn
    )
  )
);

// Define a dark theme using default palettes
$pink-primary: mat.define-palette(mat.$pink-palette);
$pink-accent: mat.define-palette(mat.$blue-grey-palette);
$pink-warn: mat.define-palette(mat.$deep-orange-palette);
$pink-theme: mat.define-dark-theme(
  (
    color: (
      primary: $pink-primary,
      accent: $pink-accent,
      warn: $pink-warn
    )
  )
);

// Define a purple theme using default palettes
$purple-primary: mat.define-palette(mat.$purple-palette);
$purple-accent: mat.define-palette(mat.$deep-purple-palette);
$purple-warn: mat.define-palette(mat.$blue-palette);
$purple-theme: mat.define-dark-theme(
  (
    color: (
      primary: $purple-primary,
      accent: $purple-accent,
      warn: $purple-warn
    )
  )
);

// Define a red theme using default palettes
$red-primary: mat.define-palette(mat.$red-palette);
$red-accent: mat.define-palette(mat.$deep-purple-palette);
$red-warn: mat.define-palette(mat.$blue-palette);
$red-theme: mat.define-dark-theme(
  (
    color: (
      primary: $red-primary,
      accent: $red-accent,
      warn: $red-warn
    )
  )
);

// Define a lime theme using default palettes
$lime-primary: mat.define-palette(mat.$lime-palette);
$lime-accent: mat.define-palette(mat.$deep-purple-palette);
$lime-warn: mat.define-palette(mat.$lime-palette);
$lime-theme: mat.define-dark-theme(
  (
    color: (
      primary: $lime-primary,
      accent: $lime-accent,
      warn: $lime-warn
    )
  )
);

// Define a orange theme using default palettes
$orange-primary: mat.define-palette(mat.$orange-palette);
$orange-accent: mat.define-palette(mat.$deep-orange-palette);
$orange-warn: mat.define-palette(mat.$blue-palette);
$orange-theme: mat.define-dark-theme(
  (
    color: (
      primary: $orange-primary,
      accent: $orange-accent,
      warn: $orange-warn
    )
  )
);

// Define a green theme using default palettes
$green-primary: mat.define-palette(mat.$green-palette);
$green-accent: mat.define-palette(mat.$light-green-palette);
$green-warn: mat.define-palette(mat.$blue-palette);
$green-theme: mat.define-dark-theme(
  (
    color: (
      primary: $green-primary,
      accent: $green-accent,
      warn: $green-warn
    )
  )
);

// Define a brown theme using default palettes
$brown-primary: mat.define-palette(mat.$brown-palette);
$brown-accent: mat.define-palette(mat.$light-green-palette);
$brown-warn: mat.define-palette(mat.$brown-palette);
$brown-theme: mat.define-dark-theme(
  (
    color: (
      primary: $brown-primary,
      accent: $brown-accent,
      warn: $brown-warn
    )
  )
);

// Define a cyan theme using default palettes
$cyan-primary: mat.define-palette(mat.$cyan-palette);
$cyan-accent: mat.define-palette(mat.$light-green-palette);
$cyan-warn: mat.define-palette(mat.$cyan-palette);
$cyan-theme: mat.define-dark-theme(
  (
    color: (
      primary: $cyan-primary,
      accent: $cyan-accent,
      warn: $cyan-warn
    )
  )
);

// Define a gray theme using default palettes
$gray-primary: mat.define-palette(mat.$gray-palette);
$gray-accent: mat.define-palette(mat.$light-green-palette);
$gray-warn: mat.define-palette(mat.$gray-palette);
$gray-theme: mat.define-dark-theme(
  (
    color: (
      primary: $gray-primary,
      accent: $gray-accent,
      warn: $gray-warn
    )
  )
);

// Define a blue-gray theme using default palettes
$blue-gray-primary: mat.define-palette(mat.$blue-gray-palette);
$blue-gray-accent: mat.define-palette(mat.$light-green-palette);
$blue-gray-warn: mat.define-palette(mat.$gray-palette);
$blue-gray-theme: mat.define-dark-theme(
  (
    color: (
      primary: $blue-gray-primary,
      accent: $blue-gray-accent,
      warn: $blue-gray-warn
    )
  )
);

// Define a deep-orange theme using default palettes
$deep-orange-primary: mat.define-palette(mat.$deep-orange-palette);
$deep-orange-accent: mat.define-palette(mat.$light-green-palette);
$deep-orange-warn: mat.define-palette(mat.$gray-palette);
$deep-orange-theme: mat.define-dark-theme(
  (
    color: (
      primary: $deep-orange-primary,
      accent: $deep-orange-accent,
      warn: $deep-orange-warn
    )
  )
);

// Define a light-green theme using default palettes
$light-green-primary: mat.define-palette(mat.$light-green-palette);
$light-green-accent: mat.define-palette(mat.$light-green-palette);
$light-green-warn: mat.define-palette(mat.$indigo-palette);
$light-green-theme: mat.define-dark-theme(
  (
    color: (
      primary: $light-green-primary,
      accent: $light-green-accent,
      warn: $light-green-warn
    )
  )
);

/* You can add global styles to this file, and also import other style files */
@import "./app/app.component.scss";

/* Import base styles */
@import "./assets/scss/variables";

@import "@angular/material/prebuilt-themes/deeppurple-amber.css";

:root {
  --text-back: #333;
  --tetx-primary: #fff;
  --text-success: #673ab7;
}

* {
  margin: 0;
  padding: 0;
  outline: none;
  list-style: none;
  box-sizing: inherit;
  text-decoration: none;
}

html,
body {
  height: 100%;
  font-size: 62.5%;
  box-sizing: border-box;
}

body {
  background-color: #e9e9e9;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}

.pink-theme {
  --text-success: #e91e63;
  @include mat.button-theme($pink-theme);
  @include mat.strong-focus-indicators-theme($pink-theme);
}

.lime-theme {
  --text-success: #cddc39;
  @include mat.button-theme($lime-theme);
  @include mat.strong-focus-indicators-theme($lime-theme);
}

.red-theme {
  --text-success: rgb(253, 27, 27);
  @include mat.button-theme($red-theme);
  @include mat.strong-focus-indicators-theme($red-theme);
}

.purple-theme {
  --text-success: #9c27b0;
  @include mat.core-theme($purple-theme);
  @include mat.button-theme($purple-theme);
  @include mat.strong-focus-indicators-theme($purple-theme);
}

.orange-theme {
  --text-success: #ff9800;
  @include mat.button-theme($orange-theme);
  @include mat.core-theme($orange-theme);
  @include mat.strong-focus-indicators-theme($orange-theme);
}

.green-theme {
  --text-success: #4caf50;
  @include mat.button-theme($green-theme);
  @include mat.core-theme($green-theme);
  @include mat.strong-focus-indicators-theme($green-theme);
}

.brown-theme {
  --text-success: #795548;
  @include mat.button-theme($brown-theme);
  @include mat.core-theme($brown-theme);
  @include mat.strong-focus-indicators-theme($brown-theme);
}

.cyan-theme {
  --text-success: #00bcd4;
  @include mat.button-theme($cyan-theme);
  @include mat.core-theme($cyan-theme);
  @include mat.strong-focus-indicators-theme($cyan-theme);
}

.grey-theme {
  --text-success: #9e9e9e;
  @include mat.button-theme($gray-theme);
  @include mat.core-theme($gray-theme);
  @include mat.strong-focus-indicators-theme($gray-theme);
}

.blue-grey-theme {
  --text-success: #607d8b;
  @include mat.button-theme($blue-gray-theme);
  @include mat.core-theme($blue-gray-theme);
  @include mat.strong-focus-indicators-theme($blue-gray-theme);
}

.deep-orange-theme {
  --text-success: #ff5722;
  @include mat.button-theme($deep-orange-theme);
  @include mat.core-theme($deep-orange-theme);
  @include mat.strong-focus-indicators-theme($deep-orange-theme);
}

.ligh-green-theme {
  --text-success: #8bc34a;
  @include mat.button-theme($light-green-theme);
  @include mat.core-theme($light-green-theme);
  @include mat.strong-focus-indicators-theme($light-green-theme);
}

.p-sticky {
  position: sticky;
}

.p-fixed {
  position: fixed;
}

.p-absolute {
  position: absolute;
}

.p-relative {
  position: relative;
}

.cursor {
  cursor: pointer;
}

.bg-transparent {
  background-color: transparent;
}

.box-none {
  box-shadow: none;
}

.float-right {
  float: right;
}

.rounded-circle {
  border-radius: 100%;
}

.rounded-0 {
  border-radius: 0 !important;
}

.text-center {
  text-align: center;
}

.text-end {
  text-align: end;
}

.text-justify {
  text-align: justify;
}

.text-right {
  text-align: right;
}

.text-left {
  text-align: left;
}

.text-start {
  text-align: start;
}

.d-flex {
  display: flex !important;
}

.d-none {
  display: none !important;
}

.d-block {
  display: block !important;
}

.row {
  flex-direction: row;
  display: flex !important;
}

.col {
  flex-direction: column;
  display: flex !important;
}

.flex-wrap {
  flex-wrap: wrap;
}

.align-items-center {
  align-items: center !important;
}

.justify-content-between {
  justify-content: space-between !important;
}

.justify-content-center {
  justify-content: center !important;
}

.justify-content-around {
  justify-content: space-around !important;
}

.justify-content-evenly {
  justify-content: space-evenly !important;
}

.justify-content-end {
  justify-content: end !important;
}

div {
  background: unset;
}

.w-100 {
  width: 100% !important;
}

.h-100 {
  height: 100% !important;
}

.mat-form-field {
  width: 100%;
}

.mat-checkbox-checked.mat-accent .mat-checkbox-background {
  background-color: #ff4081;
}

.mat-checkbox-checked:not(.mat-checkbox-disabled).mat-accent .mat-ripple-element {
  background-color: rgba(254, 98, 150, 0.8);
}

.mat-menu-panel {
  right: 77px;
  min-width: 150px !important;
  min-height: 0px !important;
}

.mat-menu-content {
  padding: 0 !important;
}

::-webkit-scrollbar {
  width: 10px;
  height: 5px;
}

::-webkit-scrollbar-thumb {
  background-color: #505050;
  border-radius: 6px;
}

::-webkit-scrollbar-track {
  background-color: #d4d4d4;
}

.sidebar_body,
.project-task,
.mat-select-panel,
.overflow-auto,
.project_list-main-list {
  &::-webkit-scrollbar {
    width: 7px;
    height: 6px;
  }

  &::-webkit-scrollbar-track {
    background-color: #fafafa;
  }

  &::-webkit-scrollbar-thumb {
    background-color: #505050;
    border-radius: 6px;
  }

  &::-webkit-scrollbar-thumb:hover {
    background-color: #555;
  }
}
